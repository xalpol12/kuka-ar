name: Project build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  java-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Start MySQL 🔥
        run: sudo systemctl start mysql.service

      - name: Initialize database 📌
        run: mysql -e 'CREATE DATABASE ${{ secrets.DATABASE_NAME }};' -u${{ secrets.DATABASE_USER }} -p${{ secrets.DATABASE_USER_PASSWORD }}

      - name: Boost user 🚀
        run: mysql -e "ALTER USER '${{ secrets.DATABASE_USER }}'@'localhost' IDENTIFIED WITH mysql_native_password BY '${{ secrets.DATABASE_USER_PASSWORD_DEFAULT }}';" -u${{ secrets.DATABASE_USER }} -p${{ secrets.DATABASE_USER_PASSWORD }}

      - name: Checkout ✅
        uses: actions/checkout@v3

      - name: Set up JDK 🦅
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up maven 🏁
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2

      - name: Build with Maven 🌀
        run: mvn -f ./java/kukaComm/pom.xml clean install

  build:
    runs-on: ubuntu-latest
    needs: java-tests
    steps:
      - name: Start MySQL 🔥
        run: sudo systemctl start mysql.service

      - name: Initialize database 📌
        run: mysql -e 'CREATE DATABASE ${{ secrets.DATABASE_NAME }};' -u${{ secrets.DATABASE_USER }} -p${{ secrets.DATABASE_USER_PASSWORD }}

      - name: Boost user 🚀
        run: mysql -e "ALTER USER '${{ secrets.DATABASE_USER }}'@'localhost' IDENTIFIED WITH mysql_native_password BY '${{ secrets.DATABASE_USER_PASSWORD_DEFAULT }}';" -u${{ secrets.DATABASE_USER }} -p${{ secrets.DATABASE_USER_PASSWORD }}

      - name: Checkout ✅
        uses: actions/checkout@v3

      - name: Set up JDK 🦅
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up maven 🏁
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2

      - name: Build with Maven 🌀
        run: mvn -f ./java/kukaComm/pom.xml clean package
      
      - name: Rename the artifact 🏗️
        run: cp ./java/kukaComm/target/kukaComm-0.0.1-SNAPSHOT.jar kukaComm-${{ github.sha }}.jar
      
      - name: Save the artifact🌊🐋
        uses: actions/upload-artifact@master
        with:
          name: kuka-server
          path: kukaComm-${{ github.sha }}.jar

  test-socket:
    runs-on: ubuntu-latest
    needs: java-tests
    steps:
      - name: Checkout ✅
        uses: actions/checkout@v3

      - name: Set up JDK 🦅
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up maven 🏁
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2

      - name: Build with Maven 🌀
        run: mvn -f ./java/testSocket/pom.xml clean package

      - name: Rename the artifact 🏗️
        run: cp ./java/testSocket/target/testsocket-0.0.1-SNAPSHOT.jar testsocket-${{ github.sha }}.jar

      - name: Save the artifact🌊🐋
        uses: actions/upload-artifact@master
        with:
          name: test-server
          path: testsocket-${{ github.sha }}.jar

  build-unity:
    name: Build for ${{ matrix.targetPlatform }}
    needs: java-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - Android # Build an Android .apk standalone app.
    steps:
      - name: Checkout ✅
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Cache data 📑
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - name: Free disk space 🧹
        if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.0

      - name: Build .apk 💣 💥
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: unity/kuka-ar-unity

      - name: Save the artifact🌊🐋
        uses: actions/upload-artifact@v3
        with:
          name: kuka-app
          path: build/${{ matrix.targetPlatform }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test-socket, build-unity]
    steps:
      - name: Checkout ✅
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get kuka server artifact 🔩
        uses: actions/download-artifact@v3
        with:
          name: kuka-server

      - name: Get test socket the artifact 🔌
        uses: actions/download-artifact@v3
        with:
          name: test-server

      - name: Get kuka Unity app artifact 🔓
        uses: actions/download-artifact@v3
        with:
          name: kuka-app
          
      - if: github.event_name == 'push'
        name: Version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - if: github.event_name == 'push'
        name: Release 🌟
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          title: ${{ steps.tag_version.outputs.new_tag }}
          automatic_release_tag: ${{ steps.tag_version.outputs.new_tag }}
          files: |
            *.jar
            *.apk
